name: Solar System Workflow

on: 
    workflow_dispatch: 
    push: 
        branches: 
            - main
            - 'feature/*'
env:
  MONGO_URI: 'mongodb+srv://supercluster.d83jj.mongodb.net/superData'
  MONGO_USERNAME: ${{vars.MONGO_USERNAME}}
  MONGO_PASSWORD: ${{secrets.MONGO_PASSWORD}}  
jobs:
    unit-testing:
        name: Unit Testing
        services:
          mongo-db:
            image: siddharth67/mongo-db:non-prod
            ports:
              - 27017:27017
        env:
            MONGO_URI: 'mongodb+srv://localhost:27017/superData'
            MONGO_USERNAME: non-prod-user
            MONGO_PASSWORD: non-prod-password 
        strategy:
          matrix:
            nodejs_version: [18, 20]
            os: [ubuntu-latest]
            exclude:
              - nodejs_version: 18
                os: macos-latest
        runs-on: ${{matrix.os}}
        steps:
            - name: Checkout Repository
              uses: actions/checkout@v4
            - name: Setup NodeJs Version - ${{matrix.nodejs_version}}
              uses: actions/setup-node@v4
              with:
                node-version: ${{matrix.nodejs_version}}
            - name: Cache NPM dependencies
              uses: actions/cache@v4.0.2
              with:
                path: node_modules
                key: ${{runner.os}}-node-modules-${{hashFiles('package-lock.json')}}
            - name: Install Dependencies
              run: npm install
            - name: Unit Testing
              id: nodejs-unit-testing-step
              run: npm test
            - name: Archive Test Result
              if: always()
              uses: actions/upload-artifact@v4.4.0
              with:
                name: Mocha-Test-Result-${{matrix.nodejs_version}}-${{matrix.os}}
                path: test-results.xml
    code-coverage:
        runs-on: ubuntu-latest
        steps:
            - name: Checkout Repository
              uses: actions/checkout@v4
            - name: Setup NodeJs Version - 18
              uses: actions/setup-node@v4
              with:
                node-version: 18
            - name: Cache NPM dependencies
              uses: actions/cache@v4.0.2
              with:
                  path: node_modules
                  key: ${{runner.os}}-node-modules-${{hashFiles('package-lock.json')}}

            - name: Install Dependencies
              run: npm install 
            - name: check Code Coverage
              continue-on-error: true
              run: npm run coverage
            - name: Archive Coverage Result
              uses: actions/upload-artifact@v4.4.0
              with:
                name: Code Coverage Result
                path: coverage
                retention-days: 5
    docker:
        name: Containerization
        runs-on: ubuntu-latest
        permissions: 
            packages: write
        needs: [unit-testing, code-coverage]
        steps:
          - name: Checkout Repo
            uses: actions/checkout@v4
            
          - name: Dockerhub Login
            uses: docker/login-action@v3.3.0
            with:
                username: ${{ secrets.DOCKERHUB_USERNAME }}
                password: ${{ secrets.DOCKERHUB_PASSWORD }}
          - name: Github Container Registry Login
            uses: docker/login-action@v3.3.0
            with:
                registry: ghcr.io
                username: ${{ github.repository_owner }}
                password: ${{ secrets.GITHUB_TOKEN }}

          - name: Build Build For Testing
            uses: docker/build-push-action@v6.7.0
            with:
              context: .
              push: false
              tags: ${{secrets.DOCKERHUB_USERNAME}}/solar-system:${{github.sha}}
            
          - name: Docker Image Testing
            run: |
                docker images
                docker run --name solar-system-app -d \
                -p 3000:3000 \
                -e MONGO_URI=$MONGO_URI \
                -e MONGO_USERNAME=$MONGO_USERNAME \
                -e MONGO_PASSWORD=$MONGO_PASSWORD \
                "${{secrets.DOCKERHUB_USERNAME}}/solar-system:${{github.sha}}"
                
                export IP=$(docker inspect -f '{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}' solar-system-app)
                echo $IP
                echo Testing Image URL using wget
                wget -q -O - 127.0.0.1:3000/live | grep live
          - name: Container Registry Push
            uses: docker/build-push-action@v6.7.0
            with:
                context: .
                push: true
                tags: |
                    ${{secrets.DOCKERHUB_USERNAME}}/solar-system:${{github.sha}}
                    ghcr.io/faresgabsi/solar-system:${{github.sha}}
